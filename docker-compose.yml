version: '3.4'

networks:
    backendnetwork:
        driver: bridge

services:
    #ngnix:
    #    image: nginx:stable-alpine
    #    volumes:
    #        - ./nginx/nginx.conf:/etc/nginx.conf
    #    ports:
    #        - 3000:80
    #    expose:
    #     - 3000
         
    #    restart: unless-stopped
    #    depends_on:
    #        - buildingconstructapi
    #    networks:
    #        - backendnetwork

      #volumes:
      #  - ./nginx/nginx.conf:/etc/nginx.conf

      #image: nginx:alpine
      #ports:
      #- "443:443"
      ##- "8080:80"
      ##networks:
      ##- backendnetwork
      #depends_on:
      #  - buildingconstructapi


    sql-server:
        container_name: buildingdb
        image: "mcr.microsoft.com/mssql/server:2019-latest"
        ports:
            - 1433:1433
        environment:
            SA_PASSWORD: "Hoainam@123"
            ACCEPT_EULA: "Y"
        networks:
        - backendnetwork

    buildingconstructapi:
        container_name: buildingapi
        #enviroment:
        #    - ASPNETCORE_ENVIROMENT=Development
        image: ${DOCKER_REGISTRY-}buildingconstructapi
        build:
            context: .
            dockerfile: BuildingConstructApi/Dockerfile
        ports:
        - 80:80
        - 443:443
        depends_on:
        - sql-server
        networks:
        - backendnetwork
        #environment:
        #- ASPNETCORE_ENVIRONMENT=Development
        #- ASPNETCORE_URLS=https://+:443;http://+:80
        #- ASPNETCORE_Kestrel__Certificates__Default__Password=Hoainam@123
        #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx   
        #volumes:
        #- ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
        #- ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

